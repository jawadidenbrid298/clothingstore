input AMPLIFY {
  globalAuthRule: AuthRule = {allow: public}
} # FOR TESTING ONLY!
type Usershopjawad @model {
  id: ID
  description: String
  name: String
  email: String
  createdAt: String
  updatedAt: String
}
type Productshopcojawad @model {
  id: ID
  name: String
  category: String
  style: String
  image: String
  images: [String]
  price: Float
  discount: Float
  newPrice: Float
  sizes: [String]
  colors: [String]
  description: String
  reviews: [Reviewshop] @hasMany(indexName: "byProduct", fields: ["id"]) # One-to-many relationship
}

type Reviewshop @model {
  id: ID
  productID: ID @index(name: "byProduct", sortKeyFields: ["createdAt"])
  name: String
  rating: Float
  comment: String
  createdAt: String
  updatedAt: String
}

type ProductRating {
  productID: ID!
  averageRating: Float!
}

type Query {
  Toprated: [ProductRating] @function(name: "topratedproducts-dev")
}

type Mutations {
  sendEmail(name: String!, email: String!, phone: String!, message: String!): EmailResponse
    @function(name: "jawadses-dev")
}

type EmailResponse {
  message: String
  success: Boolean
}
